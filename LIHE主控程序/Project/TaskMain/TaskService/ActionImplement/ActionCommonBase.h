#ifndef __ACTION_COMMON_BASE_H_
#define __ACTION_COMMON_BASE_H_
#include "BoardInc.h"
#include "TaskServiceConfig.h"
#include "ActionCommonBase.h"
typedef enum CLEAN_NEEDLE_INDEX{
    CLEAN_NEEDLE_INDEX_FIRST,
    CLEAN_NEEDLE_INDEX_SECOND,
}CLEAN_NEEDLE_INDEX;

//清洗针类型
typedef  struct CLEAN_NEEDLE_TYPE{
    uint8_t able;       //清洗使能
    CLEAN_NEEDLE_INDEX index;      //清洗序号
}CLEAN_NEEDLE_TYPE;

//清洗针接收数据
typedef  struct CLEAN_NEEDLE_CMD_DATA{
    CLEAN_NEEDLE_TYPE needle;
    CLEAN_NEEDLE_TYPE needle1;
    CLEAN_NEEDLE_TYPE needle2;
}CLEAN_NEEDLE_CMD_DATA;

//杯栈管理的垃圾桶的序号
typedef enum ACTION_PARAM_STACK_MANAGE_GARBAGE_NO
{
    TSC_STACK_MANAGE_GARBAGE_NO1,
    TSC_STACK_MANAGE_GARBAGE_NO2,
}ACTION_PARAM_STACK_MANAGE_GARBAGE_NO;

//动作相关的状态量是否存在的标识
typedef enum ACTION_SENSOR_STATUS
{
    ACTION_SENSOR_STATUS_NOT_EXIST = 0,//不存在
    ACTION_SENSOR_STATUS_EXIST = 1,
}ACTION_SENSOR_STATUS;



//设备的门的打开还是关闭命令
typedef enum MACHINE_DOOR_CMD
{
    MACHINE_DOOR_LOCK,//门磁通电
    MACHINE_DOOR_UNLOCK,//门磁断电
}MACHINE_DOOR_CMD;




//清洗针的针选择标志
typedef enum TSC_NEEDLE_WASH_SELECT_FLAG
{
    TSC_NEEDLE_WASH_SELECT_NONE = 0X00,
    TSC_NEEDLE_WASH_SELECT_1 = 0X01,
    TSC_NEEDLE_WASH_SELECT_2 = 0x02,
    TSC_NEEDLE_WASH_SELECT_3 = 0x04,
    TSC_NEEDLE_WASH_SELECT_1_2 = 0x03,
    TSC_NEEDLE_WASH_SELECT_1_3 = 0x05,
    TSC_NEEDLE_WASH_SELECT_2_3 = 0x06,
    TSC_NEEDLE_WASH_SELECT_1_2_3 = 0x07,
}TSC_NEEDLE_WASH_SELECT_FLAG;

//清洗针命令数据
typedef struct TSC_NEEDLE_WASH_DATA{
    TSC_NEEDLE_WASH_SELECT_FLAG select_flag;
    CLEAN_NEEDLE_INDEX clean_index;
}TSC_NEEDLE_WASH_DATA;




//磁珠试剂针清洗配置
typedef enum TSC_NEEDLE_REAGENT_BEAD_CLEAN_OPT
{
    TSC_NEEDLE_REAGENT_BEAD_CLEAN_OPT_IN,//内壁清洗
    TSC_NEEDLE_REAGENT_BEAD_CLEAN_OPT_OUT,//外壁清洗
    TSC_NEEDLE_REAGENT_BEAD_CLEAN_OPT_IN_OUT,//内壁外壁同时清洗
}TSC_NEEDLE_REAGENT_BEAD_CLEAN_OPT;

//样本针清洗配置
typedef enum TSC_NEEDLE_SAMPLE_CLEAN_OPT
{
    TSC_NEEDLE_SAMPLE_CLEAN_OPT_INNER,//内壁清洗
    TSC_NEEDLE_SAMPLE_CLEAN_OPT_OUT,//外壁清洗
    TSC_NEEDLE_SAMPLE_CLEAN_OPT_ALL,//内外同时清洗
}TSC_NEEDLE_SAMPLE_CLEAN_OPT;

//样本针灌注配置
typedef enum TSC_NEEDLE_SAMPLE_PRIME_OPT
{
    TSC_NEEDLE_SAMPLE_PRIME_OPT_INNER,//内壁灌注
    TSC_NEEDLE_SAMPLE_PRIME_OPT_OUT,//外壁灌注
    TSC_NEEDLE_SAMPLE_PRIME_OPT_ALL,//内外同时灌注
}TSC_NEEDLE_SAMPLE_PRIME_OPT;

//试剂针灌注配置
typedef enum TSC_NEEDLE_REAGENT_PRIME_OPT
{
    TSC_NEEDLE_REAGENT_PRIME_OPT_INNER,//内壁灌注
    TSC_NEEDLE_REAGENT_PRIME_OPT_OUT,//外壁灌注
    TSC_NEEDLE_REAGENT_PRIME_OPT_ALL,//内外同时灌注
}TSC_NEEDLE_REAGENT_PRIME_OPT;

typedef enum MEASURE_VALUE_FLAG{
    MEASURE_FLAG_DARK,//暗计数
    MEASURE_FLAG_BACK,//本底值
    MEASURE_FLAG_READ,//测光值
}MEASURE_VALUE_FLAG;


typedef enum KEY_OPT{
    CUPSTACK_KEY,       //杯栈按键
    REAGENTDISK_KEY,    //试剂盘按键
    KEY_COUNT,          //按键总数
}KEY_OPT;

typedef enum DOOR_STATE_OPT{
    DOOR_STATE_OPEN,    //新杯门打开        
    DOOR_STATE_CLOSE,   //新杯门关闭
}DOOR_STATE_OPT;

#endif




